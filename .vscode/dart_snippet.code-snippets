{
	// Place your StudyHub_student ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Named class" : {
		"scope" : "dart",
		"prefix" : "named class",
		"body" : [
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} {"
			"  $1",
			"}"
		],
		"description" : "Create class whose name is filename."
	},

	"Named enum" : {
		"scope" : "dart",
		"prefix" : "named enum",
		"body" : [
			"enum ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} {"
			"  $1",
			"}"
		],
		"description" : "Create enum whose name is filename."
	},


	"Initialize test code": {
		"scope": "dart",
		"prefix": "test",
		"body": [
			"import 'package:flutter_test/flutter_test.dart';",
			"",
			"void main() {",
			"  setUp(() => null);"
			"  group('${1:group name}', () {",
			"    test('${2:test name}', () {",
			"",
			"	});",
			"});",
			"}"
		],
		"description": "Create test code format."
	},

	"Override equals": {
		"scope": "dart",
		"prefix": "equals_override",
		"body": [
			"@override",
			"bool operator ==(Object other) {"
			"  if (identical(this, other)) {",
			"  return true;",
			"  }",
			"  if (other is ${1:ClassName}) {",
			"  return runtimeType == other.runtimeType && ${2:value} == other.${2:value};",
			"  } else {",
			"  return false;",
			"  }",
			"}",
			"",
			"@override",
			"int get hashCode => ${2:value}.hashCode;"
		],
		"description": "Override equals operator."
	}
}